@model MVCEventCalendar.Models.Students

@{
    ViewBag.Title = "Student";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-expand-sm navbar-default navbar-default fixed-top">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarsExampleDefault">
        <ul class="navbar-nav mr-auto"></ul>


        <ul class="nav navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Welcome " + @User.Identity.Name + "!", "LogOff", "Account", routeValues: null, htmlAttributes: new
           {
               title = "Logout"
           })
            </li>
        </ul>
    </div>
</nav>

<br /><br />
<header id="header">
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <br />

                <img src="~/Content/images/modallogo.png" />

            </div>
            <div class="col-md-6">
                <br /><br /><br />
                <h1 style="color:#2a398c">Learner Registration</h1>

            </div>


            <div class="col-md-2">
                <br><br><br />
                <button style="width:110px" class="btn btn-outline-warning" onclick="location.href='@Url.Action("Login", "Account")'">Login</button>
                @*<i class="fa fa-user fa-5x" aria-hidden="true" style="color:#fdba31"></i>*@
            </div>
        </div>
    </div>

</header>
<section id="breadcrumb">
    <div class="container">
        <ol class="breadcrumb">
            <marquee behaviour="alternate" direction="right">
                <li class="active" style="color:#ffffff !important;">
                    @Html.ActionLink("Learner Registration: " + @User.Identity.Name + "!", "Login", "Account", routeValues: null, htmlAttributes: new
               {
                   title = "Logout"
               })
                </li>
            </marquee>
        </ol>
    </div>
</section>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
 

        @if (ViewBag.Success != null)
        {
            <div class="container">
                <div class="row">
                    <div class="col-md-12">

                        <div class="alert alert-success">@ViewBag.Success</div>
                    </div>

                </div>

            </div>

        }

        @if (ViewBag.Duplicate != null)
        {
            <div class="container">
                <div class="row">
                    <div class="col-md-12">

                        <div class="alert alert-danger">@ViewBag.Duplicate</div>
                    </div>

                </div>

            </div>

        }


        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Names, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Names, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Names, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label class="control-label col-md-12" for="Gender">Gender</label>
            <div class="col-md-12">
                <select class="form-control" data-val="true" data-val-required="The Gender field is required." id="Gender" name="Gender">
                    <option>Male</option>
                    <option>Female</option>
                </select>
                <span class="field-validation-valid" data-valmsg-for="Gender" data-valmsg-replace="true"></span>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.RSAID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.RSAID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RSAID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Learnership, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Learnership, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Learnership, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label class="control-label col-md-10" for="Learnership">Learnership</label>
            <div class="col-md-12">
                <select class="form-control" data-val="true" data-val-required="The Learnership field is required." id="Learnership" name="Learnership">
                    <option>NC:Systems Development NQF Level 4</option>
                    <option>NC:Systems Development NQF Level 5</option>
                    <option>NC:Systems Development NQF Level 6</option>
                    <option>Microsoft (MCSD)</option>
                    <option>Microsoft (MCSA)</option>
                    <option>Business Analysis</option>
                    <option>Software Testing</option>
                </select>
                <span class="field-validation-valid" data-valmsg-for="Learnership" data-valmsg-replace="true"></span>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                Username

            </div>
            @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                 
            <div class="col-md-12">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label class="control-label col-md-12" for="Password">Password</label>
            <div class="col-md-12">
                <input class="form-control text-box single-line" id="Password" name="Password" type="password" value="" required />
                <span class="field-validation-valid text-danger" data-valmsg-for="Password" data-valmsg-replace="true"></span>
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.IsUserActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.IsUserActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsUserActive, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
     
            <div class="col-md-12">
                <select hidden class="form-control" data-val="true" data-val-required="The IsUserActive field is required." id="IsUserActive" name="IsUserActive">
                    <option>True</option>
                    <option disabled>False</option>
                </select>
                <span class="field-validation-valid" data-valmsg-for="IsUserActive" data-valmsg-replace="true"></span>
            </div>

        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}

